# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import event_pb2 as event__pb2


class ServiceStub(object):
  """The OpenStack Notifications manager definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddEvent = channel.stream_stream(
        '/Service/AddEvent',
        request_serializer=event__pb2.RawData.SerializeToString,
        response_deserializer=event__pb2.ID.FromString,
        )
    self.ListEvent = channel.unary_stream(
        '/Service/ListEvent',
        request_serializer=event__pb2.SearchRequest.SerializeToString,
        response_deserializer=event__pb2.Event.FromString,
        )
    self.GetEvent = channel.unary_unary(
        '/Service/GetEvent',
        request_serializer=event__pb2.ID.SerializeToString,
        response_deserializer=event__pb2.Event.FromString,
        )
    self.GetEventRawData = channel.unary_unary(
        '/Service/GetEventRawData',
        request_serializer=event__pb2.ID.SerializeToString,
        response_deserializer=event__pb2.RawData.FromString,
        )


class ServiceServicer(object):
  """The OpenStack Notifications manager definition.
  """

  def AddEvent(self, request_iterator, context):
    """Record an Event
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListEvent(self, request, context):
    """List of the Events
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEvent(self, request, context):
    """Get info of the Event
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEventRawData(self, request, context):
    """Get Raw Data of the Event
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddEvent': grpc.stream_stream_rpc_method_handler(
          servicer.AddEvent,
          request_deserializer=event__pb2.RawData.FromString,
          response_serializer=event__pb2.ID.SerializeToString,
      ),
      'ListEvent': grpc.unary_stream_rpc_method_handler(
          servicer.ListEvent,
          request_deserializer=event__pb2.SearchRequest.FromString,
          response_serializer=event__pb2.Event.SerializeToString,
      ),
      'GetEvent': grpc.unary_unary_rpc_method_handler(
          servicer.GetEvent,
          request_deserializer=event__pb2.ID.FromString,
          response_serializer=event__pb2.Event.SerializeToString,
      ),
      'GetEventRawData': grpc.unary_unary_rpc_method_handler(
          servicer.GetEventRawData,
          request_deserializer=event__pb2.ID.FromString,
          response_serializer=event__pb2.RawData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Service', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
